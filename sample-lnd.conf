[Application Options]

; The directory to store lnd's data within
datadir=~/.lnd/data

; Path to TLS certificate for lnd's RPC and REST services
tlscertpath=~/.lnd/tls.cert

; Path to TLS private key for lnd's RPC and REST services
tlskeypath=~/.lnd/tls.key

; Disable macaroon authentication
no-macaroons=false

; Path to write the admin macaroon for lnd's RPC and REST services if it 
; doesn't exist
adminmacaroonpath=~/.lnd/admin.macaroon

; Path to write the read-only macaroon for lnd's RPC and REST services if it
; doesn't exist
readonlymacaroonpath=~/.lnd/readonly.macaroon
                       
; Directory to log output.
logdir=~/.lnd/logs

; Add an interface/port to listen for connections 
; (default all interfaces port: 9735)
listen=

; Add an ip to the list of local addresses we claim to listen on to peers
;externalip=            


; Logging level for all subsystems {trace, debug, info, warn, error, critical} --
; You may also specify <subsystem>=<level>,<subsystem2>=<level>,... to set the
; log level for individual subsystems -- Use show to list available subsystems
debuglevel=info

; Write CPU profile to the specified file
;cpuprofile=

; Enable HTTP profiling on given port -- NOTE port must be between 1024 and 65536
;profile=

; The port to listen on for incoming p2p connections
peerport=9735

; The port for the rpc server
rpcport=10009

; The port for the REST server
restport=8080

; The maximum number of incoming pending channels permitted per peer.
maxpendingchannels=1

; The default number of confirmations a channel must have before it's considered
; open.
defaultchanconfs=1
                       
; If true, then automatic network bootstrapping will not be attempted.
nobootstrap=false

; If set, wallet will be encrypted using the default passphrase.
noencryptwallet=false


[Bitcoin]

; If the chain should be active or not.
active=false

; The directory to store the chains's data within.
chaindir=

; The daemon's rpc listening address. If a port is omitted, then the default port
; for the selected chain parameters will be used.
rpchost=localhost
              
; Username for RPC connections
rpcuser= 

; Password for RPC connections
rpcpass= 

; File containing the daemon's certificate file
rpccert=~/.ltcd/rpc.cert

; The raw bytes of the daemon's PEM-encoded certificate chain which will be used
; to authenticate the RPC connection.
rawrpccert=   

; Use the test network
testnet=false

; Use the simulation test network
simnet=false

; Use the regression test network
regtest=false


[Litecoin]

; If the chain should be active or not.
active=false

; The directory to store the chains's data within.
;chaindir=

; The daemon's rpc listening address. If a port is omitted, then the default port
; for the selected chain parameters will be used.
rpchost=localhost
              
; Username for RPC connections
;rpcuser= 

; Password for RPC connections
;rpcpass= 

; File containing the daemon's certificate file
rpccert=~/.ltcd/rpc.cert

; The raw bytes of the daemon's PEM-encoded certificate chain which will be used
; to authenticate the RPC connection.
;rawrpccert=   

; Use the test network
testnet=false

; Use the simulation test network
simnet=false

; Use the regression test network
regtest=false


[neutrino]

; If SPV mode should be active or not.
active=false

; Add a peer to connect with at startup
;addpeer=

; Connect only to the specified peers at startup
;connect=

; Max number of inbound and outbound peers
;maxpeers=

; How long to ban misbehaving peers.  Valid time units are {s, m, h}.  Minimum 1
; second
;banduration=  

; Maximum allowed ban score before disconnecting and banning misbehaving peers.
;banthreshold= 


[autopilot]

; If the autopilot agent should be active or not.
active=false

; The maximum number of channels that should be created
maxchannels=5

; The percentage of total funds that should be committed to automatic channel
; establishment
allocation=0.6
             
